DROP DATABASE IF EXISTS `auth`;

CREATE DATABASE `auth`;

DROP TABLE IF EXISTS auth.account_status;

CREATE TABLE auth.account_status (
    id INT PRIMARY KEY AUTO_INCREMENT,
    clientStatus VARCHAR(20) NOT NULL,
    allowLogin BOOLEAN NOT NULL,
    description TEXT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

DROP TABLE IF EXISTS auth.account;

CREATE TABLE auth.account (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) NOT NULL,
    lastLogin DATETIME NULL,
    deleteCode VARCHAR(255) NOT NULL,
    accountStatusId INT NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (accountStatusId) REFERENCES account_status(id) ON DELETE CASCADE
);

DROP DATABASE IF EXISTS `game`;

CREATE DATABASE `game`;

DROP TABLE IF EXISTS game.player;

CREATE TABLE game.player (
    id INT PRIMARY KEY AUTO_INCREMENT,
    accountId INT UNSIGNED NOT NULL,
    createdAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updatedAt TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    empire TINYINT UNSIGNED NOT NULL,
    playerClass TINYINT UNSIGNED NOT NULL,
    skillGroup TINYINT UNSIGNED NOT NULL,
    playTime INT UNSIGNED NOT NULL DEFAULT 0,
    level INT UNSIGNED NOT NULL DEFAULT 1,
    experience INT UNSIGNED NOT NULL DEFAULT 0,
    gold INT UNSIGNED NOT NULL DEFAULT 0,
    st TINYINT UNSIGNED NOT NULL DEFAULT 0,
    ht TINYINT UNSIGNED NOT NULL DEFAULT 0,
    dx TINYINT UNSIGNED NOT NULL DEFAULT 0,
    iq TINYINT UNSIGNED NOT NULL DEFAULT 0,
    positionX INT NOT NULL,
    positionY INT NOT NULL,
    health BIGINT NOT NULL,
    mana BIGINT NOT NULL,
    stamina BIGINT NOT NULL,
    bodyPart INT UNSIGNED NOT NULL DEFAULT 0,
    hairPart INT UNSIGNED NOT NULL DEFAULT 0,
    name VARCHAR(24) NOT NULL,
    givenStatusPoints INT UNSIGNED NOT NULL DEFAULT 0,
    availableStatusPoints INT UNSIGNED NOT NULL DEFAULT 0,
    slot TINYINT UNSIGNED NOT NULL DEFAULT 0
);